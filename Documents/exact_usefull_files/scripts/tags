!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	qualified	/Include an extra class-qualified tag entry for each tag/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!TypeScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!TypeScript	G,generator	/generators/
!_TAG_KIND_DESCRIPTION!TypeScript	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!TypeScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!TypeScript	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!TypeScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!TypeScript	g,enum	/enums/
!_TAG_KIND_DESCRIPTION!TypeScript	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!TypeScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!TypeScript	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!TypeScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!TypeScript	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	pattern	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!TypeScript	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/kloud/.local/share/chezmoi/Documents/exact_usefull_files/scripts/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
@types/node-notifier	timetable_grabber/package.json	/^    "@types\/node-notifier": "^8.0.5"$/;"	s	object:devDependencies
ALBUM	executable_graph_builder.py	/^    ALBUM = "album"$/;"	v	class:Tag
ARTIST	executable_graph_builder.py	/^    ARTIST = "artist"$/;"	v	class:Tag
ActivityEntry	executable_work_hours.py	/^class ActivityEntry:$/;"	c
ActivityEntry.__init__	executable_work_hours.py	/^    def __init__(self, start_datetime: str, end_datetime: str, duration: str):$/;"	m	class:ActivityEntry
ActivityEntry.get_timerange	executable_work_hours.py	/^    def get_timerange(self) -> str:$/;"	m	class:ActivityEntry	typeref:typename:str
AlbumItem	executable_graph_builder.py	/^class AlbumItem:$/;"	c
AlbumItem.writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:AlbumItem
ArtistItem	executable_graph_builder.py	/^class ArtistItem:$/;"	c
ArtistItem.writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:ArtistItem
Bookmark	executable_bookmarks_graph.py	/^class Bookmark:$/;"	c
Bookmark.write_to_file	executable_bookmarks_graph.py	/^    def write_to_file(self):$/;"	m	class:Bookmark
Browser	timetable_grabber/index.ts	/^import puppeteer, { type Browser } from "puppeteer-core";$/;"	a
EXCLUDE	executable_graph_builder.py	/^    EXCLUDE = "je"$/;"	v	class:TagExclusionStrategy
EXCLUDE_IF_EMPTY	executable_graph_builder.py	/^    EXCLUDE_IF_EMPTY = "wee"$/;"	v	class:TagExclusionStrategy
GENRE	executable_graph_builder.py	/^    GENRE = "genre"$/;"	v	class:Tag
GenreItem	executable_graph_builder.py	/^class GenreItem:$/;"	c
GenreItem.writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:GenreItem
INCLUDE	executable_graph_builder.py	/^    INCLUDE = "ji"$/;"	v	class:TagExclusionStrategy
SongItem	executable_graph_builder.py	/^class SongItem:$/;"	c
SongItem.writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:SongItem
Subject	timetable_grabber/index.ts	/^type Subject = {$/;"	a
TITLE	executable_graph_builder.py	/^    TITLE = "title"$/;"	v	class:Tag
Tag	executable_graph_builder.py	/^class Tag(Enum):$/;"	c
Tag.ALBUM	executable_graph_builder.py	/^    ALBUM = "album"$/;"	v	class:Tag
Tag.ARTIST	executable_graph_builder.py	/^    ARTIST = "artist"$/;"	v	class:Tag
Tag.GENRE	executable_graph_builder.py	/^    GENRE = "genre"$/;"	v	class:Tag
Tag.TITLE	executable_graph_builder.py	/^    TITLE = "title"$/;"	v	class:Tag
Tag.YEAR	executable_graph_builder.py	/^    YEAR = "year"$/;"	v	class:Tag
Tag.isIncluded	executable_graph_builder.py	/^    def isIncluded(self, file_path: str, strategy_map, is_tag_empty):        $/;"	m	class:Tag
TagExclusionStrategy	executable_graph_builder.py	/^class TagExclusionStrategy(Enum):$/;"	c
TagExclusionStrategy.EXCLUDE	executable_graph_builder.py	/^    EXCLUDE = "je"$/;"	v	class:TagExclusionStrategy
TagExclusionStrategy.EXCLUDE_IF_EMPTY	executable_graph_builder.py	/^    EXCLUDE_IF_EMPTY = "wee"$/;"	v	class:TagExclusionStrategy
TagExclusionStrategy.INCLUDE	executable_graph_builder.py	/^    INCLUDE = "ji"$/;"	v	class:TagExclusionStrategy
TagExclusionStrategy.WARN_EXCLUDE_IF_EMPTY	executable_graph_builder.py	/^    WARN_EXCLUDE_IF_EMPTY = "we"$/;"	v	class:TagExclusionStrategy
TagExclusionStrategy.WARN_INCLUDE_IF_EMPTY	executable_graph_builder.py	/^    WARN_INCLUDE_IF_EMPTY = "wi"$/;"	v	class:TagExclusionStrategy
WARN_EXCLUDE_IF_EMPTY	executable_graph_builder.py	/^    WARN_EXCLUDE_IF_EMPTY = "we"$/;"	v	class:TagExclusionStrategy
WARN_INCLUDE_IF_EMPTY	executable_graph_builder.py	/^    WARN_INCLUDE_IF_EMPTY = "wi"$/;"	v	class:TagExclusionStrategy
YEAR	executable_graph_builder.py	/^    YEAR = "year"$/;"	v	class:Tag
YearItem	executable_graph_builder.py	/^class YearItem:$/;"	c
YearItem.writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:YearItem
_	executable_work_hours.py	/^    _ = [$/;"	v
__init__	executable_work_hours.py	/^    def __init__(self, start_datetime: str, end_datetime: str, duration: str):$/;"	m	class:ActivityEntry
activities	executable_work_hours.py	/^    activities = list(csv.reader(csvfile, delimiter=",", quotechar='"'))$/;"	v
add_subject	timetable_grabber/index.ts	/^            for (const add_subject of added) {$/;"	C
added	timetable_grabber/index.ts	/^            let added = new_subjects.filter(equals_filter(old_subjects));$/;"	v
album_to_metadata	executable_graph_builder.py	/^album_to_metadata = {}$/;"	v
arch_repo_api_url	executable_get_changelog.py	/^            arch_repo_api_url = f"https:\/\/archlinux.org\/packages\/{repo}\/any\/{package}\/jso/;"	v
arch_repo_api_url	executable_get_changelog.py	/^            arch_repo_api_url = f"https:\/\/archlinux.org\/packages\/{repo}\/x86_64\/{package}\//;"	v
arch_repo_api_url	executable_get_changelog.py	/^        arch_repo_api_url = f"https:\/\/aur.archlinux.org\/rpc\/v5\/info?arg[]={package}"$/;"	v
artist_to_metadata	executable_graph_builder.py	/^artist_to_metadata = {}$/;"	v
artists_regex	executable_graph_builder.py	/^artists_regex = re.compile(r" & |, | x ");$/;"	v
artwork	pixiv_bg_checker/index.ts	/^    for (const artwork of artworks) {$/;"	C
artwork_id	pixiv_bg_checker/index.ts	/^            const artwork_id = file.split('_')[0]$/;"	C
artworks	pixiv_bg_checker/index.ts	/^        let artworks: string[] = []$/;"	v
artworks	pixiv_bg_checker/index.ts	/^for (const [author, artworks] of authors) {$/;"	C
askQuestion	pixiv_bg_checker/index.ts	/^function askQuestion(query: string) {$/;"	f
askQuestion.rl	pixiv_bg_checker/index.ts	/^    const rl = readline.createInterface({$/;"	C	function:askQuestion
author	pixiv_bg_checker/index.ts	/^for (const [author, artworks] of authors) {$/;"	C
author_id	pixiv_bg_checker/index.ts	/^        const author_id = parts[parts.length - 2].replace('id', '');$/;"	C
authors	pixiv_bg_checker/index.ts	/^const authors: Map<string, string[]> = new Map();$/;"	C
bookmarks	executable_bookmarks_graph.py	/^    bookmarks: list[Bookmark] = []$/;"	v	typeref:typename:list[Bookmark]
browser	pixiv_bg_checker/index.ts	/^let browser: Browser;$/;"	v
browser	timetable_grabber/index.ts	/^let browser: Browser | null = null;$/;"	v
browserURL	pixiv_bg_checker/index.ts	/^const browserURL = 'http:\/\/127.0.0.1:21222';$/;"	C
button	pixiv_bg_checker/index.ts	/^        const button = await page.$(`button[data-gtm-user-id='${author_id}']`);$/;"	C	function:check_artwork
ch_subject	timetable_grabber/index.ts	/^            for (const ch_subject of changed_subjects) {$/;"	C
changed	timetable_grabber/index.ts	/^        let changed = 0;$/;"	v
changed_subjects	timetable_grabber/index.ts	/^            const changed_subjects = removed.filter(index_name_filter(added, true));$/;"	C
changelog	executable_get_changelog.py	/^        changelog = str($/;"	v
check_artwork	pixiv_bg_checker/index.ts	/^async function check_artwork(art_id: string, author_id: string) {$/;"	f
check_artwork.button	pixiv_bg_checker/index.ts	/^        const button = await page.$(`button[data-gtm-user-id='${author_id}']`);$/;"	C	function:check_artwork
check_artwork.page	pixiv_bg_checker/index.ts	/^    const page = await browser.newPage();$/;"	C	function:check_artwork
check_conflicts	executable_update_chezmoi.sh	/^check_conflicts() {$/;"	f
compilerOptions	pixiv_bg_checker/tsconfig.json	/^  "compilerOptions": {$/;"	o
compilerOptions	timetable_grabber/tsconfig.json	/^  "compilerOptions": {$/;"	o
cookies	timetable_grabber/index.ts	/^    const cookies = JSON.parse(cookiesString);$/;"	C
cookies	timetable_grabber/index.ts	/^const cookies = await page.cookies();$/;"	C
cookiesString	timetable_grabber/index.ts	/^    const cookiesString = fs.readFileSync(".\/cookies.json").toString();$/;"	C
cookies_path	timetable_grabber/index.ts	/^const cookies_path = path.resolve(".\/cookies.json");$/;"	C
day	timetable_grabber/index.ts	/^        for (const day of days) {$/;"	C
day_timetable	timetable_grabber/index.ts	/^        const day_timetable = timetable_raw.substring(index + searchStr.length, last_index).trim/;"	C
day_timetable_subjects	timetable_grabber/index.ts	/^        const day_timetable_subjects: Subject[] = [];$/;"	C
day_timetable_subjects_sep	timetable_grabber/index.ts	/^        const day_timetable_subjects_sep = day_timetable.split("\\n");$/;"	C
days	timetable_grabber/index.ts	/^const days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];$/;"	C
dependencies	pixiv_bg_checker/package.json	/^  "dependencies": {$/;"	o
dependencies	timetable_grabber/package.json	/^  "dependencies": {$/;"	o
devDependencies	timetable_grabber/package.json	/^  "devDependencies": {$/;"	o
enabled	timetable_grabber/biome.json	/^        "enabled": true$/;"	b	object:organizeImports
enabled	timetable_grabber/biome.json	/^        "enabled": true,$/;"	b	object:formatter
enabled	timetable_grabber/biome.json	/^        "enabled": true,$/;"	b	object:linter
entries_grouped	executable_work_hours.py	/^    entries_grouped = dict($/;"	v
entry	timetable_grabber/index.ts	/^        for (const entry of sub_timetable_entries) {$/;"	C
equals_filter	timetable_grabber/index.ts	/^        const equals_filter = (second_arr: Subject[]) => (sub1: Subject) =>$/;"	C
escape_name	executable_bookmarks_graph.py	/^def escape_name(name):$/;"	f
escape_name	executable_graph_builder.py	/^def escape_name(name):$/;"	f
esm	pixiv_bg_checker/tsconfig.json	/^    "esm": true$/;"	b	object:ts-node
esm	timetable_grabber/tsconfig.json	/^    "esm": true$/;"	b	object:ts-node
executable	timetable_grabber/index.ts	/^for (const executable of executables) {$/;"	C
executables	timetable_grabber/index.ts	/^const executables = ["\/usr\/bin\/chromium-browser", "\/usr\/bin\/chromium"];$/;"	C
formatter	timetable_grabber/biome.json	/^    "formatter": {$/;"	o
generate_report	executable_work_hours.py	/^def generate_report(year_month: list[str], entries: list[ActivityEntry]):$/;"	f
genre_to_metadata	executable_graph_builder.py	/^genre_to_metadata = {}$/;"	v
getFile	executable_graph_builder.py	/^def getFile(subdir: str, name: str):$/;"	f
get_file	executable_bookmarks_graph.py	/^def get_file(name: str):$/;"	f
get_tag	executable_graph_builder.py	/^def get_tag(metadata, tag: Tag, file_path: str):$/;"	f
get_temp	server/fancontrol.sh	/^get_temp() {$/;"	f
get_timerange	executable_work_hours.py	/^    def get_timerange(self) -> str:$/;"	m	class:ActivityEntry	typeref:typename:str
github_repo_api_url	executable_get_changelog.py	/^        github_repo_api_url = ($/;"	v
group	timetable_grabber/index.ts	/^                group: subject_raw[3],$/;"	C
i	timetable_grabber/index.ts	/^        for (let i = 0; i < day_timetable_subjects_sep.length; i += 3) {$/;"	v
i	timetable_grabber/index.ts	/^    let i = 0;$/;"	v
icon_path	timetable_grabber/index.ts	/^const icon_path = path.resolve(".\/icon.png");$/;"	C
illegal_chars	executable_bookmarks_graph.py	/^illegal_chars = re.compile(r"[^\\w\\s-]")$/;"	v
illegal_chars	executable_graph_builder.py	/^illegal_chars = re.compile(r'[^\\w\\s-]');$/;"	v
include_extra_artists	executable_graph_builder.py	/^include_extra_artists = False;$/;"	v
include_single_albums	executable_graph_builder.py	/^include_single_albums = False;$/;"	v
indentStyle	timetable_grabber/biome.json	/^        "indentStyle": "space",$/;"	s	object:formatter
indentWidth	timetable_grabber/biome.json	/^        "indentWidth": 4,$/;"	n	object:formatter
index	executable_graph_builder.py	/^index: int = 0;$/;"	v	typeref:typename:int
index	timetable_grabber/index.ts	/^    for (const index of indexes) {$/;"	C
index_name_filter	timetable_grabber/index.ts	/^        const index_name_filter = (second_arr: Subject[], include: boolean) => (sub1: Subject) =/;"	C
indexes	timetable_grabber/index.ts	/^    const indexes = [...timetable_raw.matchAll(new RegExp(searchStr, "gi"))].map((a) => a.index)/;"	C
isIncluded	executable_graph_builder.py	/^    def isIncluded(self, file_path: str, strategy_map, is_tag_empty):        $/;"	m	class:Tag
json_data	executable_bookmarks_graph.py	/^    json_data = json.load(json_file)$/;"	v
last_index	timetable_grabber/index.ts	/^        const last_index = timetable_raw.indexOf("\\\\n", index);$/;"	C
lineWidth	timetable_grabber/biome.json	/^        "lineWidth": 120$/;"	n	object:formatter
linter	timetable_grabber/biome.json	/^    "linter": {$/;"	o
main	pixiv_bg_checker/package.json	/^  "main": "index.ts",$/;"	s
main	shutdown.go	/^func main() {$/;"	f	package:main
main	shutdown.go	/^package main$/;"	p
main	timetable_grabber/package.json	/^  "main": "index.ts",$/;"	s
main.main	shutdown.go	/^func main() {$/;"	f	package:main
main.n	shutdown.go	/^var n int$/;"	v	package:main	typeref:typename:int
max	server/fancontrol.sh	/^max() {$/;"	f
mkdir	executable_bookmarks_graph.py	/^def mkdir(path):$/;"	f
mkdir	executable_graph_builder.py	/^def mkdir(path):$/;"	f
n	shutdown.go	/^var n int$/;"	v	package:main	typeref:typename:int
name	pixiv_bg_checker/package.json	/^  "name": "pixiv-bg-checker",$/;"	s
name	timetable_grabber/package.json	/^  "name": "vilniustech-timetable-grabber",$/;"	s
name_and_type	timetable_grabber/index.ts	/^                name_and_type: subject_raw[4].substring(0, subject_raw[4].indexOf("(") - 1) + ty/;"	C
new_subjects	timetable_grabber/index.ts	/^            const new_subjects = timetable_map.get(day) ?? [];$/;"	C
node-notifier	timetable_grabber/package.json	/^    "node-notifier": "^10.0.1",$/;"	s	object:dependencies
notify	timetable_grabber/index.ts	/^async function notify(title: string, body: string, tags: string) {$/;"	f
objectsEqual	timetable_grabber/index.ts	/^function objectsEqual<T>(obj1: T, obj2: T): boolean {$/;"	f
off	server/fancontrol.sh	/^off() {$/;"	f
old_subjects	timetable_grabber/index.ts	/^            const old_subjects = timetable_map_old.get(day) ?? [];$/;"	C
on	server/fancontrol.sh	/^on() {$/;"	f
organizeImports	timetable_grabber/biome.json	/^    "organizeImports": {$/;"	o
p_input	executable_get_changelog.py	/^p_input = sys.argv[-1].strip()$/;"	v
package	executable_get_changelog.py	/^package = split[1]$/;"	v
page	pixiv_bg_checker/index.ts	/^    const page = await browser.newPage();$/;"	C	function:check_artwork
page	pixiv_bg_checker/index.ts	/^const page = await browser.newPage();$/;"	C
page	timetable_grabber/index.ts	/^const page = await browser.newPage();$/;"	C
pages	pixiv_bg_checker/index.ts	/^    let pages: Promise<boolean>[] = []$/;"	v
parse_level	executable_bookmarks_graph.py	/^def parse_level(data: Any, bookmarks_l: list[Bookmark]):$/;"	f
parts	pixiv_bg_checker/index.ts	/^        const author_id = parts[parts.length - 2].replace('id', '');$/;"	C
parts	pixiv_bg_checker/index.ts	/^        const parts = author.split('_')$/;"	C
process_file	executable_graph_builder.py	/^def process_file(file_path: str):$/;"	f
puppeteer-core	pixiv_bg_checker/package.json	/^    "puppeteer-core": "^21.3.6"$/;"	s	object:dependencies
puppeteer-core	timetable_grabber/package.json	/^    "puppeteer-core": "^22.2.0"$/;"	s	object:dependencies
recommended	timetable_grabber/biome.json	/^            "recommended": true$/;"	b	object:linter.rules
rem_subject	timetable_grabber/index.ts	/^            for (const rem_subject of removed) {$/;"	C
remix_feat_regex	executable_graph_builder.py	/^remix_feat_regex = re.compile(r"feat\\. |ft\\. |Ft | remix| edit| cover", re.IGNORECASE)$/;"	v
removed	timetable_grabber/index.ts	/^            let removed = old_subjects.filter(equals_filter(new_subjects));$/;"	v
repo	executable_get_changelog.py	/^repo = split[0].replace("chaotic-", "").replace("-x86-64-v3", "")$/;"	v
res	pixiv_bg_checker/index.ts	/^    const res = await Promise.all(pages);$/;"	C
results	executable_get_changelog.py	/^        results = requests.get(arch_repo_api_url, timeout=3).json()["results"]$/;"	v
rl	pixiv_bg_checker/index.ts	/^    const rl = readline.createInterface({$/;"	C	function:askQuestion
root	pixiv_bg_checker/index.ts	/^const root = "\/home\/kloud\/Pictures\/Pictures\/backgrounds\/";$/;"	C
rules	timetable_grabber/biome.json	/^        "rules": {$/;"	o	object:linter
scripts	pixiv_bg_checker/package.json	/^  "scripts": {$/;"	o
scripts	timetable_grabber/package.json	/^  "scripts": {$/;"	o
searchStr	timetable_grabber/index.ts	/^    const searchStr = "Lecture\\tTime\\tWeek\\tSubgroup\\tSubject\\tAuditorium\\tLecturer\\tType/;"	C
sleep	pixiv_bg_checker/index.ts	/^function sleep(ms: number) {$/;"	f
sleep	timetable_grabber/index.ts	/^function sleep(ms: number) {$/;"	f
song_id_to_metadata	executable_graph_builder.py	/^song_id_to_metadata = {}$/;"	v
split	executable_get_changelog.py	/^split = p_input.split("\/")$/;"	v
start	pixiv_bg_checker/package.json	/^    "start": "ts-node index.ts"$/;"	s	object:scripts
start	timetable_grabber/package.json	/^    "start": "ts-node index.ts"$/;"	s	object:scripts
stringify	timetable_grabber/index.ts	/^function stringify<T>(obj: T): string {$/;"	f
sub_timetable_entries	timetable_grabber/index.ts	/^        const sub_timetable_entries = [];$/;"	C
subject	timetable_grabber/index.ts	/^            const subject: Subject = {$/;"	C
subject_raw	timetable_grabber/index.ts	/^            const subject_raw = entry.split("\\t");$/;"	C
tag_exclusion_strategy	executable_graph_builder.py	/^tag_exclusion_strategy = {$/;"	v
tag_map	executable_graph_builder.py	/^tag_map = {$/;"	v
test	pixiv_bg_checker/package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1",$/;"	s	object:scripts
test	timetable_grabber/package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1",$/;"	s	object:scripts
time	timetable_grabber/index.ts	/^                time: subject_raw[1],$/;"	C
timetable_map	timetable_grabber/index.ts	/^    const timetable_map: Map<string, Subject[]> = new Map();$/;"	C
timetable_map_old	timetable_grabber/index.ts	/^        const timetable_map_old: Map<string, Subject[]> = new Map($/;"	C
timetable_path	timetable_grabber/index.ts	/^const timetable_path = path.resolve(".\/timetable.txt");$/;"	C
timetable_raw	timetable_grabber/index.ts	/^const timetable_raw = await page.$eval("*", (el) => {$/;"	C
ts-node	pixiv_bg_checker/tsconfig.json	/^  "ts-node": {$/;"	o
ts-node	timetable_grabber/tsconfig.json	/^  "ts-node": {$/;"	o
type	pixiv_bg_checker/package.json	/^  "type": "module"$/;"	s
type	timetable_grabber/index.ts	/^            let type = "";$/;"	v
type	timetable_grabber/package.json	/^  "type": "module",$/;"	s
unknown_prefix	executable_graph_builder.py	/^unknown_prefix = "Unknown";$/;"	v
upstream	executable_get_changelog.py	/^            upstream = str(requests.get(arch_repo_api_url, timeout=3).json()["url"])$/;"	v
upstream	executable_get_changelog.py	/^        upstream = str(results[0]["URL"])$/;"	v
username	executable_work_hours.py	/^username = os.environ.get("FULL_NAME")$/;"	v
version	pixiv_bg_checker/package.json	/^  "version": "0.0.1",$/;"	s
version	timetable_grabber/package.json	/^  "version": "0.0.1",$/;"	s
walk_dir	executable_graph_builder.py	/^def walk_dir(dir_path: str):$/;"	f
week	timetable_grabber/index.ts	/^                week: subject_raw[2],$/;"	C
week	timetable_grabber/index.ts	/^    const week = await page.evaluate(() => document.querySelector(".week")?.textContent?.trim()./;"	C
weekday_map	executable_work_hours.py	/^weekday_map = {0: "Mon", 1: "Tue", 2: "Wed", 3: "Thu", 4: "Fri", 5: "Sat", 6: "Sun"}$/;"	v
writeItem	executable_graph_builder.py	/^def writeItem(name: str, item: str, file):$/;"	f
writeSet	executable_graph_builder.py	/^def writeSet(name: str, sett: set, file):$/;"	f
writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:AlbumItem
writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:ArtistItem
writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:GenreItem
writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:SongItem
writeToFile	executable_graph_builder.py	/^    def writeToFile(self, subdir):$/;"	m	class:YearItem
write_item	executable_bookmarks_graph.py	/^def write_item(name: str, item: str, file):$/;"	f
write_list	executable_bookmarks_graph.py	/^def write_list(name: str, listt: list, file):$/;"	f
write_to_file	executable_bookmarks_graph.py	/^    def write_to_file(self):$/;"	m	class:Bookmark
year_to_metadata	executable_graph_builder.py	/^year_to_metadata = {}$/;"	v
