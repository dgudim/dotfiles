
# Replace ls with exa
alias ls='exa --all --icons --color=always --group-directories-first --long --git --color-scale=size --extended --header'
alias la='exa --all --icons --color=always --group-directories-first'
alias l='exa --classify --icons --color=always --group-directories-first'

# Replace cat with bat and man with batman
export BAT_THEME=gruvbox-dark
export BAT_STYLE=numbers,changes
alias cat='bat --paging=never'
alias man='batman'

# Git and chezmoi aliases
alias gpul='git pull'
alias gpus='git push'
alias gfc="git fetch origin --prune && for branch in \$(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '\$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", \$1); print \$1}'); do git branch -D \$branch; done && git maintenance run --auto && git maintenance run --task=gc"

# Scrcpy aliases
aconn() {
	adb connect kloud-phone:$1
	adb devices
}
mirror-screen() {
	scrcpy --no-audio
}

mirror-camera() {
	scrcpy --video-source=camera --camera-facing=back --camera-size=1920x1080 --no-audio
}

virtual-camera() {
	sudo modprobe v4l2loopback
	scrcpy --video-source=camera --camera-facing=back --camera-size=1920x1080 --no-audio --v4l2-sink=/dev/video0 --no-video-playback --v4l2-buffer=100
}

virtual-screen() {
	sudo modprobe v4l2loopback
	scrcpy --no-audio --v4l2-sink=/dev/video0 --no-video-playback --v4l2-buffer=100
}

# Neofetch logo
alias neofetch='neofetch --sixel /home/kloud/.config/neofetch/logo --image_size 455'

# Pacman aliases
alias package_sizes='expac -HM "%n %m" -l"\n" -Q $(pacman -Qq) | sort -rhk 2 | column -t -s " " -R 1 | less'
alias orphans='pacman -Qtdq'
alias broken='sudo pacman -Qkk | grep warning'

# Colorize grep and ip
alias grep='grep --color=auto'
alias ip='ip --color=auto'

# Interactive aliases
alias mv='mv -i'
alias rm='rm -i'
alias cp='cp -i'
alias ln='ln -i'

# Non-interactive aliases
alias mvn='/bin/mv'
alias rmn='/bin/rm'
alias cpn='/bin/cp'
alias lnn='/bin/ln'

# Auto subdir creation
alias mkdir='mkdir -pv'

alias op='xdg-open'
alias fop='op "$(fzf)"'
complete -f op

# Random stuff
alias git_vis='gource --colour-images -a 3 -s 1 -c 3'
alias gl="git log --graph --pretty=format:'%C(yellow)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=short"
alias labi_cpp='cd /home/kloud/Documents/shared/_projects/Cpp_stuff/cpp-labs/compiled_binaries_linux/ && ./menu.sh'

alias weather='curl wttr.in'

alias filestat='duf && dust'

alias pls='sudo "$BASH" -c "$(history -p !!)"'

alias reboot='sudo reboot now'
alias shut='sudo shutdown now'

alias reload='source ~/.bashrc'
alias grub-reload='sudo grub-mkconfig -o /boot/grub/grub.cfg'

# Laptop aliases
alias butter_debutter='duperemove -r -d -h -v --dedupe-options=partial,same,fiemap --hashfile=/home/kloud/Documents/butter_hashfile /mnt/storage_butter/'
alias xps_aggressive_fancurve="sudo dellfan 0 1 && sudo systemctl start fancontrol && systemctl status fancontrol"
alias xps_bios_fancurve="sudo dellfan 0 0 && sudo systemctl stop fancontrol && systemctl status fancontrol"

__rank_mirrors() {
	TMPFILE=$(mktemp)
	sudo true
	rate-mirrors --save=$TMPFILE $1
	echo "Ranked $1 mirrors"
	sudo mv /etc/pacman.d/$2 /etc/pacman.d/$2-backup
	sudo mv $TMPFILE /etc/pacman.d/$2
	echo "Moved to /etc/pacman.d/$2"
}

alias mirrors='__rank_mirrors arch mirrorlist && __rank_mirrors endeavouros endeavouros-mirrorlist && __rank_mirrors chaotic-aur chaotic-mirrorlist'

chzu() {

	chezmoi git pull
	chezmoi init

	diff_len=$(chezmoi diff | wc | tr -d ' ')
	if [ "$diff_len" = "000" ]; then
		chezmoi apply
	else
		chezmoi diff
		yn=l
		while [[ ! "$yn" =~ ^[YyNn]$ ]]; do
			read -p "Apply?" -n 1 yn
			echo
		done
		[[ "$yn" =~ ^[Yy]$ ]] && chezmoi apply
	fi
}

mount_shares() {
	echo -n "password for kloud: "
	read -s password
	echo
	
	FOLDERS=$(smbclient -L $1 -U=kloud%$password | grep Disk | grep -v [$] | cut -d" " -f1)
	
	for folder in $FOLDERS
	do
		mkdir /home/kloud/Documents/MOUNT_$1/$folder
		echo $password | sudo -S mount -t cifs -o uid=kloud,username=kloud,password=$password //$1/$folder /home/kloud/Documents/MOUNT_$1/$folder
		printf "mounted $folder\n"
	done
}

unmount_shares() {
	sudo umount ~/Documents/MOUNT_$1/*
	printf "unmounted all shares\n"
}

b_kill() {
	echo -n "password for kloud: "
	read -s password
	echo
	
	for run in {1..30}; do
		echo $password | sudo -S l2ping -i hci1 -s 668 -f $1 &
	done
}

batch(){
	for elem in $(/usr/bin/ls)
	do
	    printf "processing $elem \n"
		"$@" "$elem" &
		sleep 0.15
	done
}

batch_dir() {
	for elem in $(/usr/bin/ls */ -d)
	do
	    printf "processing $elem \n"
		cd "$elem"
		"$@" &
		cd ..
		sleep 0.15
	done
}

batch_rec() {
	files="$(find -L "$1" -type f)";
	if [[ "$files" == "" ]]; then
		echo "No files";
		return 0;
	fi
	file_count=$(echo "$files" | wc -l)
	echo "Count: $file_count"
	echo "$files" | while read file; do
		printf "processing $file \n"
		"$@" "$file" &
		sleep 0.3
	done
}

get_power() {
	echo - | awk "{printf \"%.1f\", \
$(( \
  $(cat /sys/class/power_supply/BAT*/current_now) * \
  $(cat /sys/class/power_supply/BAT*/voltage_now) \
)) / 1000000000000 }" ; echo " W "
}

download_yt_playlist() {
	yt-dlp -x -f ba --embed-thumbnail --add-metadata --output '%(uploader)s - %(title)s.%(ext)s' $1
}

# start_vpn_client(){
#     echo -n "password for kloud: "
#     read -s password
#     echo
#
#     echo $password | sudo -S vpnclient start
#     sleep 5
#     echo $password | sudo -S dhclient vpn_vpn
#     echo $password | sudo -S ip route del default via 172.16.22.1
#     route -n | grep vpn_vpn
#     ip address show vpn_vpn | grep inet
# }

remove-lines() (
  remove_lines="$1"
  all_lines="$2"
  tmp_file="$(mktemp)"
  grep -Fvxf "$remove_lines" "$all_lines" > "$tmp_file"
  mv "$tmp_file" "$all_lines"
)

rgd() {
  rg --json -C 2 $1 | delta
}

