
################################################ Replace ls with exa ################################################

alias ls='exa --all --icons --color=always --classify=always --group-directories-first --long --git --color-scale=size --extended --header'
alias la='exa --all --icons --color=always --classify=always --group-directories-first'
alias l='exa --classify --icons --color=always --classify=always --group-directories-first'



################################################ Replace cat with bat and man with batman, pager options ################################################

# eval "$(batpipe)"
export BATPIPE_ENABLE_COLOR=true
export BATPIPE_INSIDE_LESS=false
tview() {
	batpipe --color=always "$@" | "$PAGER"
}
export MOAR='--no-linenumbers --wrap --no-clear-on-exit --quit-if-one-screen --style=gruvbox'
export PAGER='moar'
alias cat='bat'
alias man='MOAR="--no-linenumbers --wrap" && batman'

alias klogs='sudo journalctl -e -f -k -b | ccze -A -o nolookups | spacer'
alias logs='sudo journalctl -e -f -b | ccze -A -o nolookups | spacer'



################################################ Faster pipx (Trick the completion into working, as there are no native completions for pipxu) ################################################

alias pipx=pipxu



################################################ Git and chezmoi aliases ################################################

alias gcomm='git commit-def'
alias gcomm-empty='git commit-empty'
alias gcomm-ren='git commit-rename'
alias gcomm-am='git commit-am'
alias gcomm-amn='git commit-amn'
alias gpul='git pr'
alias gpus='git pu'
alias gpusf='git puf'
alias gch='git co'
alias gchb='git cb'
alias gsync='git sync'
alias gfc="git fetch origin --prune && for branch in \$(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '\$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", \$1); print \$1}'); do git branch -D \$branch; done && git maintenance run --auto && git maintenance run --task=gc && git fsck"

alias git-vis='gource --colour-images -a 3 -s 1 -c 3'

git-merge-project-into-subfolder() {
	# https://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories
	if [ -z ${1+x} ]; then
		echo "Repo to clone/merge is missing"
		return 1
	fi

	if [ -z ${2+x} ]; then
		echo "Branch name is missing"
		return 1
	fi

	if [ -z ${3+x} ]; then
		echo "Target directory name is missing"
		return 1
	fi

	if ! git status; then
	    echo "Current directory is not a git repo"
		return 1
	fi


	orig_dir=$(pwd)
	temp_repo_path=$(mktemp -d)

	git clone "$1" "$temp_repo_path"
	cd "$temp_repo_path" || return 1
	git filter-repo --to-subdirectory-filter "$3"
	cd "$orig_dir" || return 1

	git remote add second-project "$temp_repo_path"
	git fetch second-project --tags
	git merge --allow-unrelated-histories "second-project/$2"
	git remote remove second-project

	/bin/rm -rf "$temp_repo_path"

	echo "DONE!"
}

################################################ Adb aliases ################################################

aconn() {
	adb connect kloud-phone:$1
	adb devices
}
logcat() {

	if [ "$1" = "all" ]; then
		adb logcat | logcat-colorize
		return 0
	fi

	if [ "$1" = "raw" ]; then
		adb logcat
		return 0
	fi

	APP="$(adb shell cmd package list packages | cut -d':' -f 2 | fzf)"

	if [ -z ${PID-} ]; then
		echo "No app specified"
		return 1
	fi

	PID="$(adb shell ps | grep $APP | tr -s [:space:] ' ' | cut -d' ' -f2)"

	if [ -z ${PID-} ]; then
	    echo "Showing all logs"
	    sleep 2
	    adb logcat | logcat-colorize
	else
	    echo "App PID: $PID"
	    sleep 2
	    adb logcat | grep -F "$PID" | logcat-colorize
	fi
}
mirror-screen() {
	scrcpy --no-audio
}

mirror-camera() {
	scrcpy --video-source=camera --camera-facing=back --camera-size=1920x1080 --no-audio
}

virtual-camera() {
	sudo modprobe v4l2loopback card_label=Video-Loopback exclusive_caps=1
	scrcpy --video-source=camera --camera-facing=back --camera-size=1920x1080 --no-audio --v4l2-sink=/dev/video0 --no-video-playback --v4l2-buffer=100
}

virtual-screen() {
	sudo modprobe v4l2loopback card_label=Video-Loopback exclusive_caps=1
	scrcpy --no-audio --v4l2-sink=/dev/video0 --no-video-playback --v4l2-buffer=100
}

################################################ Fast cd ################################################

function bu () {
	function usage () {
		 cat <<-EOF
			Usage: bu [N]
							N        N is the number of level to move back up to, this argument must be a positive integer.
							h help   displays this basic help menu.
			EOF
	}
	# reset variables
	STRARGMNT=""
	FUNCTIONARG=$1
	# Make sure the provided argument is a positive integer:
	if [[ ! -z "${FUNCTIONARG##*[!0-9]*}" ]]; then
		for i in $(seq 1 $FUNCTIONARG); do
				STRARGMNT+="../"
		done
		CMD="cd ${STRARGMNT}"
		eval $CMD
	else
		usage
	fi
}

alias op='xdg-open'
complete -f op
gop() {
	file="$(gum file --all --file --directory)";
	if [[ -d $file ]]; then
		cd "$file"
	elif [[ -f $file ]]; then
		xdg-open "$file"
	else
		return 0
	fi
}
alias brl='br -sdp'

################################################ Neofetch logo ################################################

alias fastfetch='fastfetch --cpu-temp --logo-width 60 --logo-padding-top 2 --logo /home/kloud/.config/neofetch/logo'



################################################ Pacman aliases ################################################

alias package_sizes='expac -HM "%n %m" -l"\n" -Q $(pacman -Qq) | sort -rhk 2 | column -t -s " " -R 1 | moar'
alias orphans='pacman -Qtdq'
alias broken='sudo pacman -Qkk | grep warning'



################################################ Colorize grep and ip ################################################

alias grep='grep --color=auto'
alias ip='ip --color=auto'



################################################ Interactive aliases ################################################

alias mv='mv -i'
alias rm='rm -i'
alias cp='cp -i'
alias ln='ln -i'



################################################ Non-interactive aliases ################################################

alias mvn='/bin/mv'
alias rmn='/bin/rm'
alias cpn='/bin/cp'
alias lnn='/bin/ln'



################################################ Auto subdir creation ################################################

alias mkdir='mkdir -pv'



################################################ Random stuff ################################################

alias labi_cpp='cd /home/kloud/Documents/shared/_projects/Cpp_stuff/cpp-labs/compiled_binaries_linux/ && ./menu.sh'
alias systeminfo='inxi -v 8'



################################################ Network stuff ################################################

ports() {
	if [ "$1" == "localhost" ]; then
		sudo ss -unplut
		return 0
	fi
	sudo nmap -p- -sV -O "$@"
}
rdns() {
	nmap -R -sn "$@" | grep for | cut -d " " -f 5-
}



###############################################################################################################

dd-watch() {
	watch -n5 'sudo kill -USR1 $(pgrep ^dd$)'
}

alias lspci='lspci -k'
alias i='kinfo'

alias docker-clear-dagling='docker rmi $(docker images --filter "dangling=true" -q --no-trunc)'
docker-view-parent() {
	docker inspect --format='{{"{{"}}.Id{{"}}"}} {{"{{"}}.Parent{{"}}"}} {{"{{"}}.Config.Entrypoint{{"}}"}} {{"{{"}}.Config.Image{{"}}"}}' $(docker images --filter since="$1" -q)
}
docker-ns-ip() {
	nsenter -U --preserve-credentials -n -t $(pgrep dockerd) -- ip --color=auto a
}

alias weather='curl wttr.in'

alias filestat='duf && dust'

alias pls='sudo "$BASH" -c "$(history -p !!)"'

alias qr='qrencode -t ansiutf8'

alias reboot='sudo reboot now'
alias shut='sudo shutdown now'
systemctl() {
	if [ "$1" == "poweroff" ]; then
		if [ -z ${EASTER_EGG+x} ]; then
			arr[0]="/usr/share/sounds/misc/turret-goodnight.mp3"
			arr[1]="/usr/share/sounds/misc/we-are-done-here.oga"

			rand=$(( $RANDOM % 2 ))
		else
			# More meme sounds if the EASTER_EGG is set
			arr[0]="/usr/share/sounds/misc/anya-likes-peanuts.mp3"
			arr[1]="/usr/share/sounds/misc/catsquish.mp3"
			arr[2]="/usr/share/sounds/misc/domain_expansion.mp3"
			arr[3]="/usr/share/sounds/misc/felix_bit_subarus_ear_scene_rezeroconverttoaudio.mp3"
			arr[4]="/usr/share/sounds/misc/giornos-theme-but-its-in-windows-errors.mp3"
			arr[5]="/usr/share/sounds/misc/huh-cat-meme.mp3"
			arr[6]="/usr/share/sounds/misc/matt-rose-skull-emoji.mp3"
			arr[7]="/usr/share/sounds/misc/oh-my-gah.mp3"
			arr[8]="/usr/share/sounds/misc/portal2.mp3"
			arr[9]="/usr/share/sounds/misc/rick-rolled.mp3"
			arr[10]="/usr/share/sounds/misc/turret-goodnight.mp3"
			arr[11]="/usr/share/sounds/misc/turret-thank-you.mp3"
			arr[12]="/usr/share/sounds/misc/tuturu_1.mp3"
			arr[13]="/usr/share/sounds/misc/we-are-done-here.oga"

			rand=$(( $RANDOM % 14 ))
		fi

		mpv --no-terminal "${arr[$rand]}" > /dev/null && /usr/bin/systemctl "$@" # It is here like this for the ability to cancel the shutdown
	else
		/usr/bin/systemctl "$@"
	fi
}

alias browser-hist='sqlite3 ~/.mozilla/firefox/*.default-release/places.sqlite "SELECT url FROM moz_places order by last_visit_date"'

alias reload='source ~/.bashrc'
{{ if eq .chezmoi.hostname "nuclear-submarine" }}
alias grub-reload='sudo grub-mkconfig -o /boot/grub/grub.cfg'
{{ end }}

{{ if eq .chezmoi.hostname "kloud-xps13" }}
################################################ Laptop aliases ################################################
alias butter_debutter='duperemove -r -d -h -v --dedupe-options=partial,same,fiemap --hashfile=/home/kloud/Documents/butter_hashfile /mnt/storage_butter/'
alias xps_aggressive_fancurve="sudo dellfan 0 1 && sudo systemctl start fancontrol && systemctl status fancontrol"
alias xps_bios_fancurve="sudo dellfan 0 0 && sudo systemctl stop fancontrol && systemctl status fancontrol"
{{ end }}

__rank_mirrors() {
	TMPFILE=$(mktemp)
	sudo true
	rate-mirrors --save=$TMPFILE $1
	echo "Ranked $1 mirrors"
	sudo mv /etc/pacman.d/$2 /etc/pacman.d/$2-backup
	sudo mv $TMPFILE /etc/pacman.d/$2
	echo "Moved to /etc/pacman.d/$2"
	sudo chmod 755 /etc/pacman.d/$2
}

alias mirrors='__rank_mirrors arch mirrorlist && __rank_mirrors endeavouros endeavouros-mirrorlist && __rank_mirrors chaotic-aur chaotic-mirrorlist'

chzu() {

	yay

	chezmoi git pull
	chezmoi init

	diff_len=$(chezmoi diff | wc | tr -d ' ')
	if [ "$diff_len" = "000" ]; then
		chezmoi apply
	else
		chezmoi diff
		yn=l
		while [[ ! "$yn" =~ ^[YyNn]$ ]]; do
			read -p "Apply?" -n 1 yn
			echo
		done
		[[ "$yn" =~ ^[Yy]$ ]] && chezmoi apply
	fi

	yay -Ycss
	sudo checkservices
	yay -Ps

	atuin stats

	echo $(pacman-ps | wc -l) entries require restarting
}

figleta() {
	fonts=($(find /usr/share/figlet/fonts/ -name "*.flf" | cut -d"/" -f6 | cut -d"." -f1))
	for font in "${fonts[@]}"
	do
		echo "--------------------------------------------"
		echo "$font"
		echo ""
		figlet -f $font $@
	done
}

mount_shares() {
	echo -n "password for kloud: "
	read -s password
	echo
	
	FOLDERS=$(smbclient -L $1 -U=kloud%$password | grep Disk | grep -v [$] | cut -d" " -f1)
	
	for folder in $FOLDERS
	do
		mkdir /home/kloud/Documents/MOUNT_$1/$folder
		echo $password | sudo -S mount -t cifs -o uid=kloud,username=kloud,password=$password //$1/$folder /home/kloud/Documents/MOUNT_$1/$folder
		printf "mounted $folder\n"
	done
}

unmount_shares() {
	sudo umount ~/Documents/MOUNT_$1/*
	printf "unmounted all shares\n"
}

b_kill() {
	echo -n "password for kloud: "
	read -s password
	echo
	
	for run in {1..30}; do
		echo $password | sudo -S l2ping -i hci1 -s 668 -f $1 &
	done
}

get_power() {
	echo - | awk "{printf \"%.1f\", \
$(( \
  $(cat /sys/class/power_supply/BAT*/current_now) * \
  $(cat /sys/class/power_supply/BAT*/voltage_now) \
)) / 1000000000000 }" ; echo " W "
}

download_yt_playlist() {
	yt-dlp -x -f ba --embed-thumbnail --add-metadata --output '%(uploader)s - %(title)s.%(ext)s' $1
}

# start_vpn_client(){
#     echo -n "password for kloud: "
#     read -s password
#     echo
#
#     echo $password | sudo -S vpnclient start
#     sleep 5
#     echo $password | sudo -S dhclient vpn_vpn
#     echo $password | sudo -S ip route del default via 172.16.22.1
#     route -n | grep vpn_vpn
#     ip address show vpn_vpn | grep inet
# }

remove-lines() (
  remove_lines="$1"
  all_lines="$2"
  tmp_file="$(mktemp)"
  grep -Fvxf "$remove_lines" "$all_lines" > "$tmp_file"
  mv "$tmp_file" "$all_lines"
)

rgd() {
  rg --json -C 2 $1 | delta
}

